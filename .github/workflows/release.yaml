# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Release flow

on:
  push:
    branches: [ main ]

env:
  JFROG_USERNAME: ${{ secrets.JFROG_USERNAME }}
  JFROG_PASSWORD: ${{ secrets.JFROG_PASSWORD }}
  CI_USER: ${{ secrets.CI_USER }}
  CI_USER_EMAIL: ${{ secrets.CI_USER_EMAIL }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven
      # Package and UTs
      - name: Build with Maven
        run: mvn clean package
      - name: Use the user who pushed the branch as user for the release
        run: |
          git config user.email ${{ env.CI_USER }}
          git config user.name ${{ env.CI_USER_EMAIL }}
      # Build and push to JFrog
      - name: Build and push release jar to JFrog Snapshot Repository
        run: |
          ./mvnw -s settings.xml -U \
            -DskipTests=true \
            -DuniqueVersion=false release:prepare release:perform
      # Build and push docker image to Dockerhub
      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: dactien020796/self-learn
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
